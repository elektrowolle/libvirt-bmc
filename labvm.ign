{"ignition":{"version":"3.3.0"},"passwd":{"users":[{"name":"core","sshAuthorizedKeys":["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMS13b3znoVb1B7kRyKeQFpOn+dK6zPV47Z1ITAchle0 elektrowolle"]},{"name":"benji","sshAuthorizedKeys":["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMS13b3znoVb1B7kRyKeQFpOn+dK6zPV47Z1ITAchle0 elektrowolle"]}]},"systemd":{"units":[{"contents":"[Unit]\nDescription=Layer libvirt dependencies\nWants=network-online.target\nAfter=network-online.target\nBefore=zincati.service\nConditionPathExists=!/var/lib/%N.stamp\nFailureAction=reboot\nSuccessAction=reboot\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/rpm-ostree override remove nfs-utils-coreos\nExecStart=-/usr/bin/rpm-ostree install --apply-live \\\n    --allow-inactive --assumeyes \\\n    bridge-utils \\\n    git-instaweb \\\n    libguestfs-tools \\\n    libvirt-client \\\n    libvirt-daemon-config-network \\\n    libvirt-daemon-kvm \\\n    libvirt-nss \\\n    python3-libguestfs \\\n    qemu-kvm \\\n    virt-install \\\n    virt-top \\\n    lldpd\nExecStart=/bin/touch /var/lib/%N.stamp\nExecStart=/usr/bin/systemctl reboot --no-block\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"rpm-ostree-install-libvirt-instaweb.service"},{"contents":"[Unit]\nDescription=Skydive Analyzer and Interface\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/bin/podman kill skydive-allinone\nExecStartPre=-/bin/podman rm skydive-allinone\nExecStartPre=/bin/podman pull docker.io/skydive/skydive\nExecStart=/bin/podman run --name skydive-allinone \\\n    -p 8082:8082 \\\n    --hostname skydive-allinone \\\n    docker.io/skydive/skydive allinone\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"skydive-allinone.service"},{"contents":"[Unit]\nDescription=Skydive agent for libvirtd\nAfter=skydive-network.service\nWants=network-online.target\nWants=llpd.service\nWants=podman.socket\nWants=libvirtd.service\nWants=libvirtd.socket\n\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/bin/podman kill skydive-agent\nExecStartPre=-/bin/podman rm skydive-agent\nExecStartPre=/bin/podman pull docker.io/skydive/skydive\nExecStart=/bin/podman run --name skydive-agent \\\n    --hostname skydive-agent \\\n    -e SKYDIVE_AGENT_TOPOLOGY_PROBES='lldp libvirt runc netns docker' \\\n    -e SKYDIVE_ANALYZERS='localhost-allinone:8082' \\\n    -e SKYDIVE_AGENT_TOPOLOGY_NETNS_RUN_PATH='/host/netns \\\n    -e SKYDIVE_AGENT_TOPOLOGY_RUNC_RUN_PATH='/host/runc \\\n    -v /var/run/libvirt/libvirt-sock-ro:/var/run/libvirt/libvirt-sock-ro \\\n    -v /var/run/podman/podman.sock:/var/run/docker.sock \\\n    -v /var/run/netns:/host/netns \\\n    -v /var/run/runc:/host/runc \\\n    --pid=host \\\n    --privileged \\\n    --network host \\\n    docker.io/skydive/skydive agent\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"skydive-libvirtd.service"},{"contents":"[Unit]\nDescription=network for Concourse\nAfter=network-online.target\nWants=network-online.target\nConditionPathExists=!/var/lib/%N.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/podman network create concourse\nExecStart=/bin/touch /var/lib/%N.stamp\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"concourse-network.service"},{"contents":"[Unit]\nDescription=Postgres DB for Concourse\nAfter=concourse-network.service\nWants=network-online.target\n\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/bin/podman kill concourse-db\nExecStartPre=-/bin/podman rm concourse-db\nExecStartPre=-/bin/podman pull docker.io/postgres\nExecStart=/bin/podman run --name concourse-db \\\n  --network concourse \\\n  -e POSTGRES_DB=concourse \\\n  -e POSTGRES_PASSWORD=concourse-pass \\\n  -e POSTGRES_USER=concourse-user \\\n  docker.io/postgres\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"concourse-db.service"},{"contents":"[Unit]\nDescription=Concourse Quickstart\nAfter=concourse-db.service\nWants=network-online.target\n\n[Service]\nRestart=always\nTimeoutStartSec=0\nExecStartPre=-/bin/podman kill concourse-quickstart\nExecStartPre=-/bin/podman rm concourse-quickstart\nExecStartPre=-/bin/podman pull docker.io/concourse/concourse\nExecStart=/bin/sh -c '/bin/podman run --name concourse-quickstart \\\n    --network concourse \\\n    -p 8080:8080 \\\n    -e CONCOURSE_POSTGRES_HOST=concourse-db \\\n    -e CONCOURSE_POSTGRES_USER=concourse-user \\\n    -e CONCOURSE_POSTGRES_PASSWORD=concourse-pass \\\n    -e CONCOURSE_POSTGRES_DATABASE=concourse \\\n    -e CONCOURSE_ADD_LOCAL_USER=user:user \\\n    -e CONCOURSE_MAIN_TEAM_LOCAL_USER=user \\\n    -e CONCOURSE_EXTERNAL_URL=http://$(ip addr show enp1s0 | sed -n \"s/.* \\(\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}\\)\\/.*/\\1/p\"):8080 \\\n    -e CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER=overlay \\\n    -e CONCOURSE_X_FRAME_OPTIONS=allow \\\n    -e CONCOURSE_CONTENT_SECURITY_POLICY=\"*\" \\\n    -e CONCOURSE_CLUSTER_NAME=lab \\\n    -e CONCOURSE_WORKER_CONTAINERD_DNS_SERVER=\"8.8.8.8\" \\\n    -e CONCOURSE_WORKER_RUNTIME=\"containerd\" \\\n    --privileged docker.io/concourse/concourse quickstart'\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"concourse.service"},{"dropins":[{"contents":"[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure`\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\n","name":"autologin-core.conf"}],"enabled":true,"name":"serial-getty@ttyS0.service"}]}}
